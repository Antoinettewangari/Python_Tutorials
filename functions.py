"""Functions allow us break a program into manageable chunks. These chunks are called functions.You can write a bit of code in a function & use it over and over again really easily.To create a function in Python, use the key word: def thenameofthefunction.Any line of code inside the function is part of the function."""def soda():	print('This is a function!')# Whenever you want to use a function, you must call the function. Calling a function simply means using it.soda()soda()soda()"""If a function requires any extra information, you pass the extra information as arguments in the function's parenthesis."""print('Function with Arguments: ')# A function to convert bit-coin to dollars.# This function takes the value of bit-coin to be converted.def bitcoin_to_usd(btn):	usd = btn * 32.7	print(usd)# Pass in the value of the argument whenever calling the function.bitcoin_to_usd(40)bitcoin_to_usd(20.9)"""Return statement: When you don't want to print the results of a function right then, you can store the result of the function and use it later. To do this: Use the return statement."""print('Return statement: ')# This function takes the age as an argument & calculates the age of girls one is allowed to date.def allowed_dating_age(my_age):	girls_age = my_age/2 + 7	return girls_age# The return statement takes the result of a function and stores it in a variable to be used laterprint(allowed_dating_age(24))print(allowed_dating_age(26))# Default values for Arguments.print('Default values for Arguments: ')def get_gender(sex='Unknown'):	if sex is 'm':		sex = 'Male'	elif sex is 'f':		sex = 'Female'	print(sex)get_gender('m')get_gender('f')get_gender()